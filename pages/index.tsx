import type { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import Example, { ExampleProps } from "../modules/Example";

type HomeProps = {
  examples: ExampleProps[];
};

const Home: NextPage<HomeProps> = ({ examples }) => {
  return (
    <>
      <Head>
        <title>Ckd React Examples</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <meta property="og:title" content="Ckd React Examples" />
        <meta property="og:url" content="https://react-examples.ckd.dev" />
        <meta property="og:image" content="https://ckd.dev/ckd_banner.jpg" />
        <meta property="twitter:title" content="Ckd React Examples" />
        <meta
          property="twitter:image"
          content="https://ckd.dev/ckd_banner.jpg"
        />
      </Head>

      <main className="page-container">
        <h1>Ckd React Examples</h1>

        <p>
          <a href="https://ckd.dev">Ckd</a> with{" "}
          <a href="https://reactjs.org">React</a> is easy.
        </p>

        <p>
          Create a React app (if you don&rsquo;t already have one) with{" "}
          <a href="https://nextjs.org">Next.js</a>:
        </p>
        <ul>
          <li>
            <p>
              <code>
                <a href="https://nextjs.org/docs/getting-started">
                  yarn create next-app --typescript
                </a>
              </code>
            </p>
          </li>
        </ul>

        <p>Install the Ckd React SDK:</p>
        <ul>
          <li>
            <p>
              run{" "}
              <code>
                <a href="https://github.com/stackd/ckd-react-examples/blob/main/package.json">
                  yarn add ckd-react
                </a>
              </code>
            </p>
          </li>
          <li>
            <p>
              wrap your application in the{" "}
              <code>
                <a href="https://github.com/stackd/ckd-react-examples/blob/main/pages/_app.tsx">
                  &lt;CkdProvider&gt;&hellip;&lt;/CkdProvider&gt;
                </a>
              </code>{" "}
              component
            </p>
          </li>
        </ul>

        <p>
          Now, you can copy/paste examples into your app (like a real
          developer):
        </p>

        <h2>Examples</h2>

        <ul>
          {examples.map((e) => (
            <li key={e.id}>
              <h3>
                <Link href={`/examples/${e.id}`}>
                  <a>{e.frontmatter.title}</a>
                </Link>
              </h3>
            </li>
          ))}
        </ul>
      </main>
    </>
  );
};

export const getStaticProps = async (): Promise<{ props: HomeProps }> => {
  const examples = await Example.list();
  return {
    props: {
      examples: examples.map((e) => e.props),
    },
  };
};

export default Home;
